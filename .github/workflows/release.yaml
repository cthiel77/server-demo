# .github/workflows/release.yaml

#enable to test -> push does 
# on: push
on: 
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v3

    - name: Set BUILD env data
      run: |
          {
           echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev )
           echo BUILD_TIME=`date -u +%y%m%d%H%M%S`
           echo APP_LICENSE=`cat ./LICENSE | tr -d '"'`
           echo APP_NAME=server-demo
           echo APP_DESCRIPTION=a demonstration application showing a working example of several functions and performance features
           echo AUTHOR_NAME=Carsten Thiel
           echo AUTHOR_EMAIL=dev@thiel-inet.de
           echo AUTHOR_COMPANY=ct
           echo PROJECT_NAMESPACE_PREFIX=github.com/${GITHUB_REPOSITORY}
          } >> "$GITHUB_ENV"
    
    - name: Environment Printer
      uses: managedkaos/print-env@v1.0

    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.CI_COMMON }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.21.3.linux-amd64.tar.gz"
        project_path: "."
        binary_name: "${{ env.APP_NAME }}"
        build_flags: -v -a -installsuffix cgo
        ldflags: >
            -s -w 
            -extldflags
            -static
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/cfg.ModeDefault=prod"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/log.LogLevelDefault=error"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.versionID=${{ env.APP_VERSION }}"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.buildTime=${{ env.BUILD_TIME }}"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.appName=${{ env.APP_NAME }}"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.appDescription=${{ env.APP_DESCRIPTION }}"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.authorName=${{ env.AUTHOR_NAME }}"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.authorEmail=${{ env.AUTHOR_EMAIL }}"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.authorCompany=${{ env.AUTHOR_COMPANY }}"
            -X "${{ env.PROJECT_NAMESPACE_PREFIX }}/internal/meta.extLicense=${{ env.APP_LICENSE }}"
            
