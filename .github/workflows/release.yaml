# .github/workflows/release.yaml

on:
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v3

    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
    
    - name: Set BUILD_TIME env
      run: echo BUILD_TIME=$(date -u +%y%m%d%H%M%S)

    - name: Set APP_LICENSE env
      run: echo APP_LICENSE=$(shell cat ./LICENSE | tr -d '"')

    - name: Set APP_NAME env
      run: echo APP_NAME=server-demo

    - name: Set APP_DESCRIPTION env
      run: echo APP_DESCRIPTION="a demonstration application showing a working example of several functions and performance features"
    
    - name: Set AUTHOR_NAME env
      run: echo AUTHOR_NAME="Carsten Thiel"

    - name: Set AUTHOR_EMAIL env
      run: echo AUTHOR_EMAIL="dev@thiel-inet.de"

    - name: Set AUTHOR_COMPANY env
      run: echo AUTHOR_COMPANY="ct"

    - name: Environment Printer
      uses: managedkaos/print-env@v1.0

    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.CI_COMMON }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.21.3.linux-amd64.tar.gz"
        project_path: "."
        binary_name: "${{ env.APP_NAME }}"
        build_flags: -v -a -installsuffix cgo -s -w
        ldflags: >
            -static
            -X "internal/cfg.ModeDefault=prod"
            -X "internal/log.LogLevelDefault=error"
            -X "internal/meta.versionID=${{ env.APP_VERSION }}"
            -X "internal/meta.buildTime=${{ env.BUILD_TIME }}"
            -X "internal/meta.appName=${{ env.APP_NAME }}"
            -X "internal/meta.appDescription=${{ env.APP_DESCRIPTION }}"
            -X "internal/meta.authorName=${{ env.AUTHOR_NAME }}"
            -X "internal/meta.authorEmail=${{ env.AUTHOR_EMAIL }}"
            -X "internal/meta.authorCompany=${{ env.AUTHOR_COMPANY }}"
            -X "internal/meta.extLicense=${{ env.APP_LICENSE }}"
